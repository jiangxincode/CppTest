/**
 * 开灯
 * https://www.luogu.com.cn/problem/P1876
 * 题目描述
 * 首先所有的灯都是关的（注意是关！），编号为1的人走过来，把是一的倍数的灯全部打开，编号为二的的把是二的倍数的灯全部关上，编号为3的人又把是三的倍数的灯开的关上，关的开起来……直到第N个人为止。
 * 给定N，求N轮之后，还有哪几盏是开着的。
 * 输入格式
 * 一个数N，表示灯的个数和操作的轮数
 * 输出格式
 * 若干数，表示开着的电灯编号
 * 输入输出样例
 * 输入
 * 5
 * 输出
 * 1 4
 * 说明/提示
 * 1<=N<=2^40
 */

#include <iostream>
#include <utility>
#include <map>

using namespace std;

/**
 * 对于任何一盏灯，由于它原来不亮，那么当它的开关被按奇数次时，灯是开着的；当它的开关被按偶数次时，灯是关着的；
 * 一盏灯的开关被按的次数，恰等于这盏灯的编号的因数的个数；
 * 要求哪些灯还亮着，就是问哪些灯的编号的因数有奇数个．显然完全平方数有奇数个因数。
 * 每个数除以一个数A等于另一个数B，那么A和B都是它的因数，于是因数是成对出现的，但是要因数是奇数，就必须A=B所以这个数就必须是一个是的平方得到的。
 */
int main() {
    int num;
    cin >> num;
    bool flag = true;
    for (int i = 1; i * i <= num; i++) {
        if (flag) {
            cout << i * i;
            flag = false;
        } else {
            cout << " " << i * i;
        }
    }
    cout << endl;
    return 0;
}
